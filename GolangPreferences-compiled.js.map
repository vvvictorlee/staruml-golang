{"version":3,"sources":["GolangPreferences.js"],"names":[],"mappings":"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","file":"GolangPreferences-compiled.js","sourcesContent":["/*\n * Copyright (c) 2013-2014 Minkyu Lee. All rights reserved.\n *\n * NOTICE:  All information contained herein is, and remains the\n * property of Minkyu Lee. The intellectual and technical concepts\n * contained herein are proprietary to Minkyu Lee and may be covered\n * by Republic of Korea and Foreign Patents, patents in process,\n * and are protected by trade secret or copyright law.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Minkyu Lee (niklaus.lee@gmail.com).\n *\n */\n\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50, regexp: true */\n/*global define, $, _, window, appshell, staruml */\n\ndefine(function (require, exports, module) {\n    \"use strict\";\n\n    var AppInit           = app.getModule(\"utils/AppInit\"),\n        Core              = app.getModule(\"core/Core\"),\n        PreferenceManager = app.getModule(\"core/PreferenceManager\");\n\n    var preferenceId = \"golang\";\n\n    var golangPreferences = {\n        \"golang.gen\": {\n            text: \"Golang Code Generation\",\n            type: \"Section\"\n        },\n        \"golang.gen.goDoc\": {\n            text: \"GoDoc\",\n            description: \"Generate JavaDoc comments.\",\n            type: \"Check\",\n            default: true\n        },\n        \"golang.gen.useTab\": {\n            text: \"Use Tab\",\n            description: \"Use Tab for indentation instead of spaces.\",\n            type: \"Check\",\n            default: false\n        },\n        \"golang.gen.indentSpaces\": {\n            text: \"Indent Spaces\",\n            description: \"Number of spaces for indentation.\",\n            type: \"Number\",\n            default: 4\n        },\n        \"golang.rev\": {\n            text: \"Golang Reverse Engineering\",\n            type: \"Section\"\n        },\n        \"golang.rev.association\": {\n            text: \"Use Association\",\n            description: \"Reverse Java Fields as UML Associations.\",\n            type: \"Check\",\n            default: true\n        },\n        \"golang.rev.publicOnly\": {\n            text: \"Public Only\",\n            description: \"Reverse public members only.\",\n            type: \"Check\",\n            default: false\n        },\n        \"golang.rev.typeHierarchy\": {\n            text: \"Type Hierarchy Diagram\",\n            description: \"Create a type hierarchy diagram for all classes and interfaces\",\n            type: \"Check\",\n            default: true\n        },\n        \"golang.rev.packageOverview\": {\n            text: \"Package Overview Diagram\",\n            description: \"Create overview diagram for each package\",\n            type: \"Check\",\n            default: true\n        },\n        \"golang.rev.packageStructure\": {\n            text: \"Package Structure Diagram\",\n            description: \"Create a package structure diagram for all packages\",\n            type: \"Check\",\n            default: true\n        }\n    };\n\n    function getId() {\n        return preferenceId;\n    }\n\n    function getGenOptions() {\n        return {\n            goDoc       : PreferenceManager.get(\"golang.gen.goDoc\"),\n            useTab        : PreferenceManager.get(\"golang.gen.useTab\"),\n            indentSpaces  : PreferenceManager.get(\"golang.gen.indentSpaces\")\n        };\n    }\n\n    function getRevOptions() {\n        return {\n            association      : PreferenceManager.get(\"golang.rev.association\"),\n            publicOnly       : PreferenceManager.get(\"golang.rev.publicOnly\"),\n            typeHierarchy    : PreferenceManager.get(\"golang.rev.typeHierarchy\"),\n            packageOverview  : PreferenceManager.get(\"golang.rev.packageOverview\"),\n            packageStructure : PreferenceManager.get(\"golang.rev.packageStructure\")\n        };\n    }\n\n    AppInit.htmlReady(function () {\n        PreferenceManager.register(preferenceId, \"golang\", golangPreferences);\n    });\n\n    exports.getId         = getId;\n    exports.getGenOptions = getGenOptions;\n    exports.getRevOptions = getRevOptions;\n\n});\n"]}