{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["/*\n * Copyright (c) 2014 MKLab. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50, regexp: true */\n/*global define, $, _, window, app, type, appshell, document */\n\ndefine(function (require, exports, module) {\n    \"use strict\";\n\n    var Commands       = app.getModule(\"command/Commands\"),\n        CommandManager = app.getModule(\"command/CommandManager\"),\n        ElementPickerDialog = app.getModule(\"dialogs/ElementPickerDialog\"),\n        Dialogs             = app.getModule(\"dialogs/Dialogs\"),\n        FileSystem          = app.getModule(\"filesystem/FileSystem\"),\n        FileSystemError     = app.getModule(\"filesystem/FileSystemError\"),\n        MenuManager    = app.getModule(\"menu/MenuManager\");\n\n\n    var CodeGenUtils        = require(\"CodeGenUtils\"),\n        GolangPreferences    = require(\"GolangPreferences\"),\n    //JavaReverseEngineer = require(\"JavaReverseEngineer\"),\n        GolangCodeGenerator   = require(\"GolangCodeGenerator\");\n        //GolangCodeGenerator   = require(\"GolangCodeGenerator\");\n\n\n    function handleHelloWorld() {\n        window.alert(\"Hello, world!\");\n    }\n\n    // Add a HelloWorld command\n\n    var CMD_GOLANG           = 'golang',\n        CMD_GOLANG_GENERATE  = 'golang.generate',\n        CMD_GOLANG_REVERSE   = 'golang.reverse',\n        CMD_GOLANG_CONFIGURE = 'golang.configure';\n    //var CMD_GOLANG = \"tools.helloworld\";\n    CommandManager.register(\"Golang\", CMD_GOLANG,CommandManager.doNothing)\n\n\n\n    CommandManager.register(\"Generate Golang Code\",CMD_GOLANG_GENERATE,  _handleGenerate);\n\n    // Add HelloWorld menu item (Tools > Hello World)\n    var menu = MenuManager.getMenu(Commands.TOOLS);\n\n    var golangMenu =  menu.addMenuItem(CMD_GOLANG);\n\n    golangMenu.addMenuItem(CMD_GOLANG_GENERATE);\n\n\n    /*\n     var AppInit             = app.getModule(\"utils/AppInit\"),\n     Repository          = app.getModule(\"core/Repository\"),\n     Engine              = app.getModule(\"engine/Engine\"),\n     Commands            = app.getModule(\"command/Commands\"),\n     CommandManager      = app.getModule(\"command/CommandManager\"),\n     MenuManager         = app.getModule(\"menu/MenuManager\"),\n\n\n     ExtensionUtils      = app.getModule(\"utils/ExtensionUtils\"),\n     UML                 = app.getModule(\"uml/UML\");\n\n\n     var CodeGenUtils        = require(\"CodeGenUtils\"),\n     JavaPreferences     = require(\"JavaPreferences\"),\n     JavaCodeGenerator   = require(\"JavaCodeGenerator\"),\n     JavaReverseEngineer = require(\"JavaReverseEngineer\");\n     */\n\n    /**\n     * Commands IDs\n     */\n/*\n    var CMD_JAVA           = 'golang',\n        CMD_JAVA_GENERATE  = 'golang.generate',\n        CMD_JAVA_REVERSE   = 'golang.reverse',\n        CMD_JAVA_CONFIGURE = 'golang.configure';\n*/\n    /**\n     * Command Handler for Java Generate\n     *\n     * @param {Element} base\n     * @param {string} path\n     * @param {Object} options\n     * @return {$.Promise}\n     */\n\n    function _handleGenerate(base, path, options) {\n        var result = new $.Deferred();\n\n        options = options || GolangPreferences.getGenOptions();\n\n        console.log(result);\n        if (!base) {\n            ElementPickerDialog.showDialog(\"Select a base model to generate codes\", null, type.UMLPackage)\n                .done(function (buttinId, selected){\n                    if ( buttinId === Dialogs.DIALOG_BTN_OK && selected    ) {\n                        base = selected;\n\n\n                        if ( !path){\n                            FileSystem.showOpenDialog(false, true, \"Select a folder where generated codes to be located\", null, null, function (err, files) {\n                                if ( !err){\n                                    if ( files.length > 0 ){\n                                        path = files[0];\n                                        GolangCodeGenerator.generate(base,path,options).then(result.resolve,result.reject);\n                                    } else {\n                                        result.reject(FileSystem.USER_CANCELED);\n                                    }\n                                } else {\n                                    result.reject(err);\n                                }\n                            });\n                        } else {\n                            GolangCodeGenerator.generate(base,path,options).then(result.resolve,result.reject);\n                        }\n\n                    } else {\n                        result.reject()\n                    }\n                });\n        } else {\n            if ( !path ) {\n                FileSystem.showOpenDialog(false, true, \"Select a folder where generated codes to be located\", null, null, function (err, files) {\n                    if ( !err ) {\n                        if (files.length > 0) {\n                            path = files[0];\n                            GolangCodeGenerator.generate(base, path, options).then(result.resolve, result.reject);\n                        } else {\n                            result.reject(FileSystem.USER_CANCELED);\n                        }\n                    } else {\n                        GolangCodeGenerator.generate(base, path, options).then(result.resolve, result.reject);\n                    }\n                });\n            } else {\n                GolangCodeGenerator.generate(base, path, options).then(result.resolve, result.reject);\n            }\n        }\n\n        //debugger;\n\n        return result.promise();\n\n    }\n\n    /**\n     * Command Handler for Java Reverse\n     *\n     * @param {string} basePath\n     * @param {Object} options\n     * @return {$.Promise}\n     */\n /*\n    function _handleReverse(basePath, options) {\n        var result = new $.Deferred();\n\n        // If options is not passed, get from preference\n        options = JavaPreferences.getRevOptions();\n\n        // If basePath is not assigned, popup Open Dialog to select a folder\n        if (!basePath) {\n            FileSystem.showOpenDialog(false, true, \"Select Folder\", null, null, function (err, files) {\n                if (!err) {\n                    if (files.length > 0) {\n                        basePath = files[0];\n                        JavaReverseEngineer.analyze(basePath, options).then(result.resolve, result.reject);\n                    } else {\n                        result.reject(FileSystem.USER_CANCELED);\n                    }\n                } else {\n                    result.reject(err);\n                }\n            });\n        }\n        return result.promise();\n    }\n*/\n\n    /**\n     * Popup PreferenceDialog with Java Preference Schema\n     */\n /*\n    function _handleConfigure() {\n        CommandManager.execute(Commands.FILE_PREFERENCES, JavaPreferences.getId());\n    }\n\n    // Register Commands\n    CommandManager.register(\"Java\",             CMD_JAVA,           CommandManager.doNothing);\n    CommandManager.register(\"Generate Code...\", CMD_JAVA_GENERATE,  _handleGenerate);\n    CommandManager.register(\"Reverse Code...\",  CMD_JAVA_REVERSE,   _handleReverse);\n    CommandManager.register(\"Configure...\",     CMD_JAVA_CONFIGURE, _handleConfigure);\n\n    var menu, menuItem;\n    menu = MenuManager.getMenu(Commands.TOOLS);\n    menuItem = menu.addMenuItem(CMD_JAVA);\n    menuItem.addMenuItem(CMD_JAVA_GENERATE);\n    menuItem.addMenuItem(CMD_JAVA_REVERSE);\n    menuItem.addMenuDivider();\n    menuItem.addMenuItem(CMD_JAVA_CONFIGURE);\n*/\n});"]}