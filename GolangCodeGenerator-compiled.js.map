{"version":3,"sources":["GolangCodeGenerator.js"],"names":[],"mappings":"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","file":"GolangCodeGenerator-compiled.js","sourcesContent":["/**\n * Created by gimtaehyeon on 2015. 10. 17..\n */\n\n\n/*\n * Copyright (c) 2014 MKLab. All rights reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*jslint vars: true, plusplus: true, devel: true, nomen: true, indent: 4, maxerr: 50, regexp: true */\n/*global define, $, _, window, app, type, document, java7 */\n\ndefine(function (require, exports, module) {\n    \"use strict\";\n\n    var Repository     = app.getModule(\"core/Repository\"),\n        ProjectManager = app.getModule(\"engine/ProjectManager\"),\n        Engine         = app.getModule(\"engine/Engine\"),\n        FileSystem     = app.getModule(\"filesystem/FileSystem\"),\n        FileUtils      = app.getModule(\"file/FileUtils\"),\n        Async          = app.getModule(\"utils/Async\"),\n        UML            = app.getModule(\"uml/UML\");\n\n    var CodeGenUtils = require(\"CodeGenUtils\");\n\n    /**\n     * Java Code Generator\n     * @constructor\n     *\n     * @param {type.UMLPackage} baseModel\n     * @param {string} basePath generated files and directories to be placed\n     */\n    function GolangCodeGenerator(baseModel, basePath) {\n\n        /** @member {type.Model} */\n        this.baseModel = baseModel;\n\n        /** @member {string} */\n        this.basePath = basePath;\n\n    }\n\n    /**\n     * Return Indent String based on options\n     * @param {Object} options\n     * @return {string}\n     */\n    GolangCodeGenerator.prototype.getIndentString = function (options) {\n        if (options.useTab) {\n            return \"\\t\";\n        } else {\n            var i, len, indent = [];\n            for (i = 0, len = options.indentSpaces; i < len; i++) {\n                indent.push(\" \");\n            }\n            return indent.join(\"\");\n        }\n    };\n\n    /**\n     * Generate codes from a given element\n     * @param {type.Model} elem\n     * @param {string} path\n     * @param {Object} options\n     * @return {$.Promise}\n     */\n    GolangCodeGenerator.prototype.generate = function (elem, path, options) {\n        var result = new $.Deferred(),\n            self = this,\n            fullPath,\n            directory,\n            codeWriter,\n            file;\n\n        // Package\n        if (elem instanceof type.UMLPackage) {\n            fullPath = path + \"/\" + elem.name;\n\n            directory = FileSystem.getDirectoryForPath(fullPath);\n            directory.create(function (err, stat) {\n                if (!err) {\n                    Async.doSequentially(\n                        elem.ownedElements,\n                        function (child) {\n                            return self.generate(child, fullPath, options);\n                        },\n                        false\n                    ).then(result.resolve, result.reject);\n                } else {\n                    result.reject(err);\n                }\n            });\n\n        } else {\n            //common\n            fullPath = path + \"/\" + elem.name + \".go\";\n            codeWriter = new CodeGenUtils.CodeWriter(this.getIndentString(options));\n            this.writePackageDeclaration(codeWriter, elem, options);\n            codeWriter.writeLine();\n            codeWriter.writeLine(\"import ()\");\n            codeWriter.writeLine();\n\n            if (elem instanceof type.UMLClass) {\n                this.writeClass(codeWriter, elem, options);\n            } else if (elem instanceof type.UMLInterface) {\n                this.writeInterface(codeWriter, elem, options);\n            } else if (elem instanceof type.UMLEnumeration) {\n                this.writeEnum(codeWriter, elem, options);\n            } else {\n                result.resolve();\n                return result.promise();\n            }\n\n            file = FileSystem.getFileForPath(fullPath);\n            FileUtils.writeText(file, codeWriter.getData(), true).then(result.resolve, result.reject);\n        }\n        return result.promise();\n    };\n\n\n    /**\n     * Return visibility\n     * @param {type.Model} elem\n     * @return {string}\n     */\n    GolangCodeGenerator.prototype.getVisibility = function (elem) {\n        var str = elem.name;\n\n        switch (elem.visibility) {\n            case UML.VK_PUBLIC:\n\n                return  str.substring(0, 1).toUpperCase() + str.substring(1, str.length);//  \"public\";\n            case UML.VK_PROTECTED:\n            case UML.VK_PRIVATE:\n                return  str.substring(0, 1).toLowerCase() + str.substring(1, str.length);\n        }\n        return null;\n    };\n\n    /**\n     * Collect modifiers of a given element.\n     * @param {type.Model} elem\n     * @return {Array.<string>}\n     */\n    GolangCodeGenerator.prototype.getModifiers = function (elem) {\n\n\n        var modifiers = [];\n\n\n\n        var visibility = this.getVisibility(elem);\n        if (visibility) {\n            modifiers.push(visibility);\n        }\n\n        /*\n        if (elem.isStatic === true) {\n            modifiers.push(\"static\");\n        }\n        if (elem.isAbstract === true) {\n            modifiers.push(\"abstract\");\n        }\n        if (elem.isFinalSpecialization === true || elem.isLeaf === true) {\n            modifiers.push(\"final\");\n        }\n        if (elem.concurrency === UML.CCK_CONCURRENT) {\n            modifiers.push(\"synchronized\");\n        }\n        */\n\n        // transient\n        // volatile\n        // strictfp\n        // const\n        // native\n        return modifiers;\n    };\n\n    /**\n     * Collect super classes of a given element\n     * @param {type.Model} elem\n     * @return {Array.<type.Model>}\n     */\n    GolangCodeGenerator.prototype.getSuperClasses = function (elem) {\n        var generalizations = Repository.getRelationshipsOf(elem, function (rel) {\n            return (rel instanceof type.UMLGeneralization && rel.source === elem);\n        });\n        return _.map(generalizations, function (gen) { return gen.target; });\n    };\n\n    /**\n     * Collect super interfaces of a given element\n     * @param {type.Model} elem\n     * @return {Array.<type.Model>}\n     */\n    GolangCodeGenerator.prototype.getSuperInterfaces = function (elem) {\n        var realizations = Repository.getRelationshipsOf(elem, function (rel) {\n            return (rel instanceof type.UMLInterfaceRealization && rel.source === elem);\n        });\n        return _.map(realizations, function (gen) { return gen.target; });\n    };\n\n    /**\n     * Return type expression\n     * @param {type.Model} elem\n     * @return {string}\n     */\n    GolangCodeGenerator.prototype.getType = function (elem) {\n        var _type = \"void\";\n        // type name\n        if (elem instanceof type.UMLAssociationEnd) {\n            if (elem.reference instanceof type.UMLModelElement && elem.reference.name.length > 0) {\n                _type = elem.reference.name;\n            }\n        } else {\n            if (elem.type instanceof type.UMLModelElement && elem.type.name.length > 0) {\n                _type = elem.type.name;\n            } else if (_.isString(elem.type) && elem.type.length > 0) {\n                _type = elem.type;\n            }\n        }\n        // multiplicity\n        if (elem.multiplicity) {\n            if (_.contains([\"0..*\", \"1..*\", \"*\"], elem.multiplicity.trim())) {\n                if (elem.isOrdered === true) {\n                    _type = \"List<\" + _type + \">\";\n                } else {\n                    _type = \"Set<\" + _type + \">\";\n                }\n            } else if (elem.multiplicity !== \"1\" && elem.multiplicity.match(/^\\d+$/)) { // number\n                _type += \"[]\";\n            }\n        }\n        return _type;\n    };\n\n    /**\n     * Write Doc\n     * @param {StringWriter} codeWriter\n     * @param {string} text\n     * @param {Object} options\n     */\n    GolangCodeGenerator.prototype.writeDoc = function (codeWriter, text, options) {\n        var i, len, lines;\n        if (options.javaDoc && _.isString(text)) {\n            lines = text.trim().split(\"\\n\");\n            codeWriter.writeLine(\"/**\");\n            for (i = 0, len = lines.length; i < len; i++) {\n                codeWriter.writeLine(\" * \" + lines[i]);\n            }\n            codeWriter.writeLine(\" */\");\n        }\n    };\n\n    /**\n     * Write Package Declaration\n     * @param {StringWriter} codeWriter\n     * @param {type.Model} elem\n     * @param {Object} options\n     */\n    GolangCodeGenerator.prototype.writePackageDeclaration = function (codeWriter, elem, options) {\n        /*\n        if (elem._parent) {\n            path = _.map(elem._parent.getPath(this.baseModel), function (e) { return e.name; }).join(\".\");\n        }\n        if (path) {\n            codeWriter.writeLine(\"package \" + path );\n        }\n        */\n        console.log(\"package path ::::\"+elem._parent.name );\n\n        return  codeWriter.writeLine(\"package \" + elem._parent.name );\n    };\n\n    /**\n     * Write Constructor\n     * @param {StringWriter} codeWriter\n     * @param {type.Model} elem\n     * @param {Object} options\n     */\n    GolangCodeGenerator.prototype.writeConstructor = function (codeWriter, elem, options) {\n        if (elem.name.length > 0) {\n            var terms = [];\n            var str = elem.name; // 이름\n            var sturctName =  this.getVisibility(elem);\n            // Doc\n            this.writeDoc(codeWriter, \"Default constructor\", options);\n            // Visibility\n            terms.push(\"func \")\n\n            //var visibility = this.getVisibility(elem);\n\n            if ( !elem.visibility || elem.visibility == UML.VK_PUBLIC ){\n                terms.push(\"New\")\n                terms.push(str.substring(0, 1).toUpperCase() + str.substring(1, str.length) ) ;//  \"public\";\n            } else {\n                terms.push(\"new\")\n                terms.push(str.substring(0, 1).toLowerCase() + str.substring(1, str.length) ) ;\n            }\n\n\n            terms.push(\" *\"+ sturctName+\" \");\n            codeWriter.writeLine(terms.join(\" \") + \" {\");\n            codeWriter.indent();\n            codeWriter.writeLine(\"return &\"+ sturctName+\"{}\" )\n\n            codeWriter.writeLine(\"}\");\n            codeWriter.outdent();\n\n        }\n        console.debug(codeWriter);\n    };\n\n    /**\n     * Write Member Variable\n     * @param {StringWriter} codeWriter\n     * @param {type.Model} elem\n     * @param {Object} options\n     */\n    GolangCodeGenerator.prototype.writeMemberVariable = function (codeWriter, elem, options) {\n        if (elem.name.length > 0) {\n            var terms = [];\n            // doc\n            this.writeDoc(codeWriter, elem.documentation, options);\n            // modifiers\n\n\n            var _modifiers = this.getModifiers(elem);\n            if (_modifiers.length > 0) {\n                terms.push(_modifiers.join(\" \"));\n            }\n\n            //terms.push(elem.name);\n\n\n            // type\n            terms.push(this.getType(elem));\n            /*\n            // initial value\n            if (elem.defaultValue && elem.defaultValue.length > 0) {\n                terms.push(\"= \" + elem.defaultValue);\n            }\n            */\n            codeWriter.writeLine(terms.join(\" \") + \"\");\n        }\n    };\n\n    /**\n     * Write Method\n     * @param {StringWriter} codeWriter\n     * @param {type.Model} elem\n     * @param {Object} options\n     * @param {boolean} skipBody\n     * @param {boolean} skipParams\n     */\n    GolangCodeGenerator.prototype.writeMethod = function (codeWriter, elem, options, skipBody, skipParams) {\n\n        if (elem.name.length > 0) {\n            var terms = [];\n            var params = elem.getNonReturnParameters();\n            var returnParam = elem.getReturnParameter();\n            console.debug(\"params :::::\"+ params);\n            console.debug(\"returnParam :::::\"+ returnParam);\n            debugger;\n            var structName = this.getVisibility(elem._parent);\n\n            // doc\n            var doc = elem.documentation.trim();\n\n            //Erase Javadoc @param and @return\n            var i, lines = doc.split(\"\\n\");\n            doc = \"\";\n            for (i = 0, len = lines.length; i < len; i++) {\n                if(lines[i].lastIndexOf(\"@param\", 0) !== 0 && lines[i].lastIndexOf(\"@return\", 0) !== 0) {\n                    doc += \"\\n\" + lines[i];\n                }\n            }\n\n            _.each(params, function (param) {\n                doc += \"\\n@param \" + param.name + \" \" + param.documentation;\n            });\n            if (returnParam) {\n                doc += \"\\n@return \" + returnParam.documentation;\n            }\n            this.writeDoc(codeWriter, doc, options);\n\n\n            terms.push(\"func \")\n\n            if ( elem.isStatic === true ) {\n\n            }else {\n                terms.push(\"( \")\n                terms.push(strcutName)\n                terms.push(\" this\")\n                terms.push(\") \")\n            }\n            // modifiers (name)\n            var _modifiers = this.getModifiers(elem);\n\n\n            if (_modifiers.length > 0) {\n                terms.push(_modifiers.join(\" \"));\n            }\n\n            // type\n\n\n\n\n            if (returnParam) {\n                terms.push(this.getType(returnParam));\n            } else {\n                terms.push(\"\");\n            }\n\n            // name + parameters\n            var paramTerms = [];\n            if (!skipParams) {\n                var i, len;\n                for (i = 0, len = params.length; i < len; i++) {\n                    var p = params[i];\n                    var s = this.getType(p) + \" \" + p.name;\n                    if (p.isReadOnly === true) {\n                        s = \"final \" + s;\n                    }\n                    paramTerms.push(s);\n                }\n            }\n            terms.push(elem.name + \"(\" + paramTerms.join(\", \") + \")\");\n\n            // body\n            if (skipBody === true || _.contains(_modifiers, \"abstract\")) {\n                codeWriter.writeLine(terms.join(\" \") + \";\");\n            } else {\n                codeWriter.writeLine(terms.join(\" \") + \" {\");\n                codeWriter.indent();\n                codeWriter.writeLine(\"// TODO implement here\");\n\n                // return statement\n                if (returnParam) {\n                    var returnType = this.getType(returnParam);\n                    if (returnType === \"boolean\") {\n                        codeWriter.writeLine(\"return false;\");\n                    } else if (returnType === \"int\" || returnType === \"long\" || returnType === \"short\" || returnType === \"byte\") {\n                        codeWriter.writeLine(\"return 0;\");\n                    } else if (returnType === \"float\") {\n                        codeWriter.writeLine(\"return 0.0f;\");\n                    } else if (returnType === \"double\") {\n                        codeWriter.writeLine(\"return 0.0d;\");\n                    } else if (returnType === \"char\") {\n                        codeWriter.writeLine(\"return '0';\");\n                    } else if (returnType === \"String\") {\n                        codeWriter.writeLine('return \"\";');\n                    } else {\n                        codeWriter.writeLine(\"return null;\");\n                    }\n                }\n\n                codeWriter.outdent();\n                codeWriter.writeLine(\"}\");\n            }\n        }\n    };\n\n    /**\n     * Write Class\n     * @param {StringWriter} codeWriter\n     * @param {type.Model} elem\n     * @param {Object} options\n     */\n\n\n    GolangCodeGenerator.prototype.writeClass = function (codeWriter, elem, options) {\n        var i, len, terms = [];\n\n        // Doc\n\n\n        var doc = elem.documentation.trim();\n\n        if (ProjectManager.getProject().author && ProjectManager.getProject().author.length > 0) {\n            doc += \"\\n@author \" + ProjectManager.getProject().author;\n        }\n\n        this.writeDoc(codeWriter, doc, options);\n\n        // Modifiers\n\n        terms.push(\"type\\n\");\n        codeWriter.writeLine(terms.join(\" \"),\"(\");\n\n        //terms.writeLine();\n        codeWriter.indent();\n\n        var _modifiers = this.getModifiers(elem);\n        codeWriter.writeLine(_modifiers+\" struct {\")\n\n        /*\n        if ( _.contains(_modifiers, \"abstract\") !== true && _.some(elem.operations, function (op) { return op.isAbstract === true; })) {\n            _modifiers.push(\"abstract\");\n        }\n\n        if (_modifiers.length > 0) {\n            terms.push(_modifiers.join(\" \"));\n        }\n        */\n\n        // Extends\n\n         var _extends = this.getSuperClasses(elem);\n         if (_extends.length > 0) {\n             codeWriter.indent();\n             codeWriter.writerLine(  _extends[0].name+ \"/* extend  */\");\n         }\n        codeWriter.outdentine();\n        var _implements = this.getSuperInterfaces(elem);\n        if (_implements.length > 0) {\n            //terms.push\n            console.debug(\"implements \" + _.map(_implements, function (e) { return e.name; })+(\", \"));\n        }\n        /*\n        // Implements\n\n\n        // (from associations)\n\n         var associations = Repository.getRelationshipsOf(elem, function (rel) {\n         return (rel instanceof type.UMLAssociation);\n         });\n\n         for (i = 0, len = associations.length; i < len; i++) {\n         var asso = associations[i];\n         if (asso.end1.reference === elem && asso.end2.navigable === true) {\n         this.writeMemberVariable(codeWriter, asso.end2, options);\n         codeWriter.writeLine();\n         }\n         if (asso.end2.reference === elem && asso.end1.navigable === true) {\n         this.writeMemberVariable(codeWriter, asso.end1, options);\n         codeWriter.writeLine();\n         }\n         }\n         */\n        codeWriter.indent();\n\n        // Member Variables\n        // (from attributes)\n\n        for (i = 0, len = elem.attributes.length; i < len; i++) {\n            this.writeMemberVariable(codeWriter, elem.attributes[i], options);\n        }\n\n        codeWriter.writeLine(\"}\")\n        codeWriter.outdent();\n\n        codeWriter.writeLine(\")\")\n        codeWriter.outdent()\n\n        // Constructor\n        codeWriter.writeLine(\"//Constructor\")\n\n        this.writeConstructor(codeWriter, elem, options);\n        codeWriter.writeLine();\n        //@todo 여기 멈춤\n\n        codeWriter.writeLine();\n\n        // Methods\n        for (i = 0, len = elem.operations.length; i < len; i++) {\n            this.writeMethod(codeWriter, elem.operations[i], options, false, false);\n            codeWriter.writeLine();\n        }\n        debugger;\n        // Extends methods\n\n        /*\n        if (_extends.length > 0) {\n            for (i = 0, len = _extends[0].operations.length; i < len; i++) {\n                _modifiers = this.getModifiers(_extends[0].operations[i]);\n                if( _.contains(_modifiers, \"abstract\") === true ) {\n                    this.writeMethod(codeWriter, _extends[0].operations[i], options, false, false);\n                    codeWriter.writeLine();\n                }\n            }\n        }\n        */\n\n        // Interface methods\n        for (var j = 0; j < _implements.length; j++) {\n            for (i = 0, len = _implements[j].operations.length; i < len; i++) {\n                this.writeMethod(codeWriter, _implements[j].operations[i], options, false, false);\n                codeWriter.writeLine();\n            }\n        }\n        /*\n        // Inner Definitions\n        for (i = 0, len = elem.ownedElements.length; i < len; i++) {\n            var def = elem.ownedElements[i];\n            if (def instanceof type.UMLClass) {\n                if (def.stereotype === \"annotationType\") {\n                    this.writeAnnotationType(codeWriter, def, options);\n                } else {\n                    this.writeClass(codeWriter, def, options);\n                }\n                codeWriter.writeLine();\n            } else if (def instanceof type.UMLInterface) {\n                this.writeInterface(codeWriter, def, options);\n                codeWriter.writeLine();\n            } else if (def instanceof type.UMLEnumeration) {\n                this.writeEnum(codeWriter, def, options);\n                codeWriter.writeLine();\n            }\n        }\n        */\n\n        codeWriter.outdent();\n        codeWriter.writeLine(\"}\");\n    };\n\n\n    /**\n     * Write Interface\n     * @param {StringWriter} codeWriter\n     * @param {type.Model} elem\n     * @param {Object} options\n     */\n    GolangCodeGenerator.prototype.writeInterface = function (codeWriter, elem, options) {\n        var i, len, terms = [];\n\n        // Doc\n        this.writeDoc(codeWriter, elem.documentation, options);\n\n        // Modifiers\n        var visibility = this.getVisibility(elem);\n        if (visibility) {\n            terms.push(visibility);\n        }\n\n        // Interface\n        terms.push(\"interface\");\n        terms.push(elem.name);\n\n        // Extends\n        var _extends = this.getSuperClasses(elem);\n        if (_extends.length > 0) {\n            terms.push(\"extends \" + _.map(_extends, function (e) { return e.name; }).join(\", \"));\n        }\n        codeWriter.writeLine(terms.join(\" \") + \" {\");\n        codeWriter.writeLine();\n        codeWriter.indent();\n\n        // Member Variables\n        // (from attributes)\n        for (i = 0, len = elem.attributes.length; i < len; i++) {\n            this.writeMemberVariable(codeWriter, elem.attributes[i], options);\n            codeWriter.writeLine();\n        }\n        // (from associations)\n        var associations = Repository.getRelationshipsOf(elem, function (rel) {\n            return (rel instanceof type.UMLAssociation);\n        });\n        for (i = 0, len = associations.length; i < len; i++) {\n            var asso = associations[i];\n            if (asso.end1.reference === elem && asso.end2.navigable === true) {\n                this.writeMemberVariable(codeWriter, asso.end2, options);\n                codeWriter.writeLine();\n            }\n            if (asso.end2.reference === elem && asso.end1.navigable === true) {\n                this.writeMemberVariable(codeWriter, asso.end1, options);\n                codeWriter.writeLine();\n            }\n        }\n\n        // Methods\n        for (i = 0, len = elem.operations.length; i < len; i++) {\n            this.writeMethod(codeWriter, elem.operations[i], options, true, false);\n            codeWriter.writeLine();\n        }\n\n        // Inner Definitions\n        for (i = 0, len = elem.ownedElements.length; i < len; i++) {\n            var def = elem.ownedElements[i];\n            if (def instanceof type.UMLClass) {\n                if (def.stereotype === \"annotationType\") {\n                    this.writeAnnotationType(codeWriter, def, options);\n                } else {\n                    this.writeClass(codeWriter, def, options);\n                }\n                codeWriter.writeLine();\n            } else if (def instanceof type.UMLInterface) {\n                this.writeInterface(codeWriter, def, options);\n                codeWriter.writeLine();\n            } else if (def instanceof type.UMLEnumeration) {\n                this.writeEnum(codeWriter, def, options);\n                codeWriter.writeLine();\n            }\n        }\n\n        codeWriter.outdent();\n        codeWriter.writeLine(\"}\");\n    };\n\n    /**\n     * Write Enum\n     * @param {StringWriter} codeWriter\n     * @param {type.Model} elem\n     * @param {Object} options\n     */\n    GolangCodeGenerator.prototype.writeEnum = function (codeWriter, elem, options) {\n        var i, len, terms = [];\n        // Doc\n        this.writeDoc(codeWriter, elem.documentation, options);\n\n        // Modifiers\n        var visibility = this.getVisibility(elem);\n        if (visibility) {\n            terms.push(visibility);\n        }\n        // Enum\n        terms.push(\"enum\");\n        terms.push(elem.name);\n\n        codeWriter.writeLine(terms.join(\" \") + \" {\");\n        codeWriter.indent();\n\n        // Literals\n        for (i = 0, len = elem.literals.length; i < len; i++) {\n            codeWriter.writeLine(elem.literals[i].name + (i < elem.literals.length - 1 ? \",\" : \"\"));\n        }\n\n        codeWriter.outdent();\n        codeWriter.writeLine(\"}\");\n    };\n\n\n    /**\n     * Write AnnotationType\n     * @param {StringWriter} codeWriter\n     * @param {type.Model} elem\n     * @param {Object} options\n     */\n    GolangCodeGenerator.prototype.writeAnnotationType = function (codeWriter, elem, options) {\n        var i, len, terms = [];\n\n        // Doc\n        var doc = elem.documentation.trim();\n        if (ProjectManager.getProject().author && ProjectManager.getProject().author.length > 0) {\n            doc += \"\\n@author \" + ProjectManager.getProject().author;\n        }\n        this.writeDoc(codeWriter, doc, options);\n\n        // Modifiers\n        var _modifiers = this.getModifiers(elem);\n        if (_.contains(_modifiers, \"abstract\") !== true && _.some(elem.operations, function (op) { return op.isAbstract === true; })) {\n            _modifiers.push(\"abstract\");\n        }\n        if (_modifiers.length > 0) {\n            terms.push(_modifiers.join(\" \"));\n        }\n\n        // AnnotationType\n        terms.push(\"@interface\");\n        terms.push(elem.name);\n\n        codeWriter.writeLine(terms.join(\" \") + \" {\");\n        codeWriter.writeLine();\n        codeWriter.indent();\n\n        // Member Variables\n        for (i = 0, len = elem.attributes.length; i < len; i++) {\n            this.writeMemberVariable(codeWriter, elem.attributes[i], options);\n            codeWriter.writeLine();\n        }\n\n        // Methods\n        for (i = 0, len = elem.operations.length; i < len; i++) {\n            this.writeMethod(codeWriter, elem.operations[i], options, true, true);\n            codeWriter.writeLine();\n        }\n\n        // Extends methods\n        if (_extends.length > 0) {\n            for (i = 0, len = _extends[0].operations.length; i < len; i++) {\n                _modifiers = this.getModifiers(_extends[0].operations[i]);\n                if(_.contains(_modifiers, \"abstract\") === true) {\n                    this.writeMethod(codeWriter, _extends[0].operations[i], options, false, false);\n                    codeWriter.writeLine();\n                }\n            }\n        }\n\n        // Inner Definitions\n        for (i = 0, len = elem.ownedElements.length; i < len; i++) {\n            var def = elem.ownedElements[i];\n            if (def instanceof type.UMLClass) {\n                if (def.stereotype === \"annotationType\") {\n                    this.writeAnnotationType(codeWriter, def, options);\n                } else {\n                    this.writeClass(codeWriter, def, options);\n                }\n                codeWriter.writeLine();\n            } else if (def instanceof type.UMLInterface) {\n                this.writeInterface(codeWriter, def, options);\n                codeWriter.writeLine();\n            } else if (def instanceof type.UMLEnumeration) {\n                this.writeEnum(codeWriter, def, options);\n                codeWriter.writeLine();\n            }\n        }\n\n        codeWriter.outdent();\n        codeWriter.writeLine(\"}\");\n    };\n\n    /**\n     * Generate\n     * @param {type.Model} baseModel\n     * @param {string} basePath\n     * @param {Object} options\n     */\n    function generate(baseModel, basePath, options) {\n        var result = new $.Deferred();\n\n        var golangCodeGenerator = new GolangCodeGenerator(baseModel, basePath);\n        return golangCodeGenerator.generate(baseModel, basePath, options);\n    }\n\n    exports.generate = generate;\n\n});\n\n"]}